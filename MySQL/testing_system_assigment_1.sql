DROP DATABASE IF EXISTS testing_system_assigment_1;
CREATE DATABASE testing_system_assigment_1;
USE testing_system_assigment_1;

DROP TABLE IF EXISTS Department;
CREATE TABLE Department(
DepartmentID	INT AUTO_INCREMENT PRIMARY KEY,
DepartmentName	VARCHAR(50) UNIQUE KEY NOT NULL
);
-- Create tale Position
DROP TABLE IF EXISTS `Position`;
CREATE TABLE `Position`(
PositionID INT PRIMARY KEY,
PositionName VARCHAR(50) UNIQUE KEY NOT NULL
);

-- CREATE TABLE ACCOUNT
DROP TABLE IF EXISTS `ACCOUNT`;
CREATE TABLE `ACCOUNT`(
ACCOUNTID INT PRIMARY KEY,
EMAIL VARCHAR(100),
USENAME VARCHAR(50) NOT NULL,
FULLNAME VARCHAR(50),
DEPARTMENTID INT,
POSITIONID INT,
CREATEDATE DATETIME,
FOREIGN KEY (DEPARTMENTID) REFERENCES Department (DepartmentID),
);

-- CREATE TABLE GROUP
DROP TABLE IF EXISTS `GROUP`;
CREATE TABLE `GROUP`(
GROUPID INT,
GROUPNAME VARCHAR(50),
CREATORID INT,
CREATEDATE DATETIME
);

-- CREATE TABLE GROUPACCOUNT
DROP TABLE IF EXISTS GROUPACCOUNT;
CREATE TABLE GROUPACCOUNT(
GROUPID INT,
ACCOUNTID INT,
JOINDATE DATETIME
);

-- CREATE TABLE TYPEQUESTION
DROP TABLE IF EXISTS TYPEQUESTION;
CREATE TABLE TYPEQUESTION(
TYPEID INT,
TYPENAME VARCHAR(50)
);

-- CREATE TABBLE CATEGORYQUESTION
DROP TABLE IF EXISTS CATEGORYQUESTION;
CREATE TABLE CATEGORYQUESTION(
CATEGORYID INT,
CATEGORYNAME VARCHAR(50) 
);

-- CREATE TABLE QUESTION
DROP TABLE IF EXISTS QUESTION;
CREATE TABLE QUESTION(
QUESTIONID INT,
CONTENT VARCHAR(100),
CATEGORYID INT,
TYPEID INT,
CREATORID INT,
CREATEDATE DATETIME
);

-- CREATE TABLE ANSWER
DROP TABLE IF EXISTS ANSWER;
CREATE TABLE ANSWER(
ANSWERID INT,
CONTENT VARCHAR(100),
QUESTIONID INT,
ISCORRECT VARCHAR(50)
);

-- CREATE TABLE EXAM
DROP TABLE IF EXISTS EXAM;
CREATE TABLE EXAM(
EXAMID INT,
`CODE` INT,
TITLE VARCHAR(50),
CATEGORYID INT,
DURATION DATETIME,
CREATORID INT,
CREATEDATE DATETIME
);

-- CREATE TABLE EXAMQUESTION
DROP TABLE IF EXISTS EXAMQUESTION;
CREATE TABLE EXAMQUESTION(
EXAMID INT,
QUESTIONID INT
);
